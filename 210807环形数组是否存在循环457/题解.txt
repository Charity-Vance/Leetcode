方法一：快慢指针
思路及算法

我们可以将环形数组理解为图中的 nn 个点，\text{nums}[i]nums[i] 表示 ii 号点向 (i + \text{nums}[i]) \bmod n(i+nums[i])modn 号点连有一条单向边。
注意到这张图中的每个点有且仅有一条出边，这样我们从某一个点出发，沿着单向边不断移动，最终必然会进入一个环中。
而依据题目要求，我们要检查图中是否存在一个所有单向边方向一致的环。
我们可以使用在无向图中找环的一个经典算法：快慢指针来解决本题，参考题解「141. 环形链表」。
具体地，我们检查每一个节点，令快慢指针从当前点出发，快指针每次移动两步，慢指针每次移动一步，期间每移动一次，
我们都需要检查当前单向边的方向是否与初始方向是否一致，如果不一致，我们即可停止遍历，因为当前路径必然不满足条件。
为了降低时间复杂度，我们可以标记每一个点是否访问过，过程中如果我们的下一个节点为已经访问过的节点，则可以停止遍历。
在实际代码中，我们无需新建一个数组记录每个点的访问情况，而只需要将原数组的对应元素置零即可（题目保证原数组中元素不为零）。
遍历过程中，如果快慢指针相遇，或者移动方向改变，那么我们就停止遍历，并将快慢指针经过的点均置零即可。
特别地，当 \text{nums}[i]nums[i] 为 nn 的整倍数时，ii 的后继节点即为 ii 本身，此时循环长度 k=1k=1，不符合题目要求，因此我们需要跳过这种情况。

作者：LeetCode-Solution
链接：https://leetcode-cn.com/problems/circular-array-loop/solution/huan-xing-shu-zu-shi-fou-cun-zai-xun-hua-0ay2/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。